version: "3.8"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker events
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      # The HTTPS port (host port:inside container port)
      - "80:80"
      # The Web UI port (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the docker events
      - /var/run/docker.sock:/var/run/docker.sock
  postgres-account:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - "pgdata_account:/var/lib/postgresql/data"
    command: ["postgres", "-c", "log_statement=all"]
  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - '5050:80'
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin
  #   links:
  #     - postgres-account:postgres
  account:
    build:
      context: ./account
      target: builder
    image: account
    env_file: ./account/.env.dev
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`malcorp.test`) && PathPrefix(`/api/account`)"
    environment:
      - ENV=dev
    volumes:
      - ./account:/go/src/app
    # have to use $$ (double-dollar) so docker doesn't try to substitute a variable
    depends_on:
      - postgres-account
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"
volumes:
  pgdata_account:
  # pgadmin: